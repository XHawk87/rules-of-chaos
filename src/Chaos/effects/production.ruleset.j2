{% set waste = options.cities.production.waste -%}

; Production waste
; Note: no autohelptexts for these!

{% for gov in waste.governments %}
[effect_waste_{{ gov.name | slugify }}]
type    = "Output_Waste"
value   = {{ gov.base }}
reqs    =
    { "type",       "name",           "range",  "quiet"
      "Gov",        "{{ gov.name }}", "Player", TRUE
      "OutputType", "Shield",         "Local",  FALSE
    }
{% endfor %}

[effect_waste_other_govs]
type    = "Output_Waste"
value   = {{ waste.other.base }}
reqs    =
    { "type",       "name",           "range",  "present"
      "OutputType", "Shield",         "Local",  TRUE
{%- for gov in waste.governments %}
      "Gov",        "{{ gov.name }}", "Player", FALSE
{%- endfor %}
    }

{% for gov in waste.governments %}
; -{{ gov.perHundredTilesPct / 100 }}% shield waste per tile with {{ gov.name }}
[effect_waste_distance_{{ gov.name | slugify }}]
type    = "Output_Waste_By_Distance"
value   = {{ gov.perHundredTilesPct }}
reqs    =
    { "type",       "name",           "range",  "quiet"
      "OutputType", "Shield",         "Local",  FALSE
      "Gov",        "{{ gov.name }}", "Player", TRUE
    }
{% endfor %}

; other governments -2% shields each tile
[effect_waste_distance_other_govs]
type    = "Output_Waste_By_Distance"
value   = {{ waste.other.perHundredTilesPct }}
reqs    =
    { "type",       "name",           "range",  "present"
      "OutputType", "Shield",         "Local",  TRUE
{%- for gov in waste.governments %}
      "Gov",        "{{ gov.name }}", "Player", FALSE
{%- endfor %}
    }

; Trade reduces shield waste by 1% per tile
[effect_waste_distance_trade_tech]
type    = "Output_Waste_By_Distance"
value   = -{{ waste.tradePerHundredTilesReductionPct}}
reqs    =
    { "type",       "name",   "range"
      "OutputType", "Shield", "Local"
      "Tech",       "Trade",  "Player"
    }

[effect_waste_reduction_courthouse]
type    = "Output_Waste_Pct"
value   = {{ waste.courthouseReductionPct }}
reqs    =
    { "type", "name", "range"
      "OutputType", "Shield", "local"
      "Building", "Courthouse", "City"
    }

[effect_waste_reduction_palace]
type    = "Output_Waste_Pct"
value   = {{ waste.palaceReductionPct }}
reqs    =
    { "type", "name", "range"
      "OutputType", "Shield", "local"
      "Building", "Palace", "City"
    }

[effect_waste_reduction_2nd_palace]
type    = "Output_Waste_Pct"
value   = {{ waste.palaceReductionPct }}
reqs    =
    { "type", "name", "range", "present"
      "OutputType", "Shield", "local", TRUE
      "Building", "Second Palace", "City", TRUE
      "Building", "Palace", "City", FALSE
    }

{% set eop = options.cities.production.earlyOutputPenalty -%}
{% if eop.enabled -%}
; Railroad because makes Pyramids obsolete
{% for gov in eop.affectedGovernments -%}
[effect_gov_tile_penalty_production_{{ gov | slugify }}]
type    = "Output_Penalty_Tile"
value   = 2
reqs    =
    { "type", "name", "range", "present", "quiet"
      "OutputType", "Shield", "Local", TRUE, TRUE
      "Gov", "{{ gov }}", "Player", TRUE, TRUE
      {% if eop.eliminatedByPyramids -%}
      "Building", "Pyramids", "Player", FALSE, FALSE
      {% endif -%}
      {% if eop.eliminatedByRailroadTech -%}
      "Tech", "Railroad", "Player", FALSE, FALSE
      {% endif -%}
    }
{% endfor %}
{%- endif %}

{% set prodPct = options.cities.production.outputBonusPct -%}
{% for gov in ["Monarchy", "Republic", "City States"] %}
[effect_workshop_production_{{ gov | slugify }}]
type    = "Output_Bonus"
value   = {{ prodPct.factories.workshop }}
reqs    =
    { "type", "name", "range"
	  "Gov", "{{ gov }}", "Player"
      "Building", "Workshop", "City"
      "OutputType", "Shield", "Local"
    }
{% endfor %}

[effect_factory]
type    = "Output_Bonus"
value   = {{ prodPct.factories.factory }}
reqs    =
    { "type", "name", "range"
      "Building", "Factory", "City"
      "OutputType", "Shield", "Local"
    }

[effect_mfg_plant]
type    = "Output_Bonus"
value   = {{ prodPct.factories.mfgPlant }}
reqs    =
    { "type", "name", "range"
      "Building", "Mfg. Plant", "City"
      "OutputType", "Shield", "Local"
    }

; Hoover Dam behaves like a (self-enhanced) Hydro Plant in its own city
{% for factory in ["Factory", "Mfg. Plant"] %}
[effect_hoover_dam_{{ factory | slugify }}]
type    = "Output_Bonus"
value   = {{ prodPct.power.hooverDam }}
reqs    =
    { "type", "name", "range"
      "Building", "{{ factory }}", "City"
      "Building", "Hoover Dam", "City"
      "OutputType", "Shield", "Local"
    }

[effect_solar_plant_{{ factory | slugify }}]
type    = "Output_Bonus"
value   = {{ prodPct.power.solar }}
reqs    =
    { "type", "name", "range", "present"
      "Building", "{{ factory }}", "City", TRUE
      "Building", "Solar Plant", "City", TRUE
      "OutputType", "Shield", "Local", TRUE
      "Building", "Hoover Dam", "City", FALSE
    }

[effect_hydro_plant_{{ factory | slugify }}]
type    = "Output_Bonus"
value   = {{ prodPct.power.hydro }}
reqs    =
    { "type", "name", "range", "present"
      "Building", "{{ factory }}", "City", TRUE
      "Building", "Hydro Plant", "City", TRUE
      "OutputType", "Shield", "Local", TRUE
      "Building", "Solar Plant", "City", FALSE
      "Building", "Hoover Dam", "City", FALSE
    }

[effect_nuclear_plant_{{ factory | slugify }}]
type    = "Output_Bonus"
value   = {{ prodPct.power.nuclear }}
reqs    =
    { "type", "name", "range", "present"
      "Building", "{{ factory }}", "City", TRUE
      "Building", "Nuclear Plant", "City", TRUE
      "OutputType", "Shield", "Local", TRUE
      "Building", "Hydro Plant", "City", FALSE
      "Building", "Solar Plant", "City", FALSE
      "Building", "Hoover Dam", "City", FALSE
    }

[effect_power_plant_{{ factory | slugify }}]
type    = "Output_Bonus"
value   = {{ prodPct.power.powerPlant }}
reqs    =
    { "type", "name", "range", "present"
      "Building", "{{ factory }}", "City", TRUE
      "Building", "Power Plant", "City", TRUE
      "OutputType", "Shield", "Local", TRUE
      "Building", "Nuclear Plant", "City", FALSE
      "Building", "Hydro Plant", "City", FALSE
      "Building", "Solar Plant", "City", FALSE
      "Building", "Hoover Dam", "City", FALSE
    }
{% endfor %}

{% set penaltyPct = options.cities.production.outputPenaltyPct -%}
[effect_The_paris_agreement_1]
type    = "Output_Bonus"
value   = -{{ penaltyPct.parisAgreement }}
reqs    =
    { "type", "name", "range", "present"
      "Building", "The Paris Agreement", "World", TRUE
      "OutputType", "Shield", "Local", TRUE
      "Gov", "Communism", "Player", FALSE
      "Gov", "Anarchy", "Player", FALSE
      "Gov", "Fundamentalism", "Player", FALSE
      "Gov", "City States", "Player", FALSE
      "Building", "Global Emission Union", "World", FALSE
    }

[effect_global_emission_union_1]
type    = "Output_Bonus"
value   = -{{ penaltyPct.globalEmissionsUnion }}
reqs    =
    { "type", "name", "range", "present"
      "Building", "Global Emission Union", "World", TRUE
      "OutputType", "Shield", "Local", TRUE
      "Gov", "Anarchy", "Player", FALSE
    }

[effect_occupation_government_1]
type    = "Output_Bonus"
value   = -{{ penaltyPct.occupationalGovernment }}
reqs    =
    { "type", "name", "range"
      "Building", "Occupation Government", "City"
      "OutputType", "Shield", "Local"
    }

{% set output = options.cities.production.outputBonus -%}
[effect_offshore_platform_shallow_water]
type    = "Output_Add_Tile"
value   = {{ output.offshorePlatform }}
reqs    =
    { "type",         "name",              "range", "present"
      "TerrainClass", "Oceanic",           "Local", TRUE
      "Terrain",      "Deep Ocean",        "Local", FALSE
      "Building",     "Offshore Platform", "City",  TRUE
      "OutputType",   "Shield",            "Local", TRUE
    }

[effect_offshore_platform_deep_ocean]
type    = "Output_Add_Tile"
value   = {{ output.offshorePlatform }}
reqs    =
    { "type",       "name",              "range", "present"
      "Terrain",    "Deep Ocean",        "Local", TRUE
      "Building",   "Offshore Platform", "City",  TRUE
      "Extra",      "Oil Platform",      "Local", TRUE
      "OutputType", "Shield",            "Local", TRUE
    }

[effect_city_shield]
type    = "Output_Add_Tile"
value   = {{ options.cities.production.centreTile.bonus }}
reqs    =
    { "type", "name", "range"
      "CityTile", "Center", "Local"
      "OutputType", "Shield", "Local"
    }

[effect_pyramids]
type    = "Output_Inc_Tile"
value   = {{ output.pyramids }}
reqs    =
    { "type", "name", "range"
      "Building", "Pyramids", "City"
      "OutputType", "Shield", "Local"
    }


[effect_unit_shield_value_recycle]
type    = "Unit_Shield_Value_Pct"
value   = {{ options.units.disbanding.shieldReturnPct.base - 100 }}
reqs    =
    { "type",   "name",         "range", "present"
      "Action", "Recycle Unit", "Local", TRUE
    }


; Make Mine extra do something
[effect_mine]
type    = "Mining_Pct"
value   = 100
reqs    =
    { "type", "name", "range"
      "Extra", "Mine", "Local"
    }

[effect_oil_well]
type    = "Mining_Pct"
value   = 100
reqs    =
    { "type", "name", "range"
      "Extra", "Oil Well", "Local"
    }

