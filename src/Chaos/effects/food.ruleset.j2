{% set food = options.cities.food -%}
{% set waste = options.cities.food.waste -%}
; Base -1% food each 2 tile
[effect_food_waste_distance]
type    = "Output_Waste_By_Distance"
value   = {{ waste.perHundredTilesPct }}
reqs    =
    { "type",       "name",     "range",    "present"
      "OutputType", "Food",     "Local",    TRUE
      "Gov",        "Anarchy",  "Player",   FALSE
    }

[effect_courthouse_food_waste_reduction]
type    = "Output_Waste_Pct"
value   = {{ waste.courthouseReductionPct }}
reqs    =
    { "type", "name", "range"
      "Building", "Courthouse", "City"
      "OutputType", "Food", "local"
    }

[effect_granary_food_waste_reduction]
type    = "Output_Waste_Pct"
value   = {{ waste.granaryReductionPct }}
reqs    =
    { "type", "name", "range"
      "Building", "Granary", "City"
      "OutputType", "Food", "local"
    }

{% set eop = options.cities.food.earlyOutputPenalty -%}
{% if eop.enabled -%}
; Railroad because makes Pyramids obsolete
{% for gov in eop.affectedGovernments -%}
[effect_gov_tile_penalty_food_{{ gov | slugify }}]
type    = "Output_Penalty_Tile"
value   = 2
reqs    =
    { "type", "name", "range", "present", "quiet"
      "OutputType", "Food", "Local", TRUE, TRUE
      "Gov", "{{ gov }}", "Player", TRUE, TRUE
      {% if eop.eliminatedByPyramids -%}
      "Building", "Pyramids", "Player", FALSE, FALSE
      {% endif -%}
      {% if eop.eliminatedByRailroadTech -%}
      "Tech", "Railroad", "Player", FALSE, FALSE
      {% endif -%}
    }
{% endfor %}
{%- endif %}

[effect_harbour]
type    = "Output_Add_Tile"
value   = {{ food.harbourBonus }}
reqs    =
    { "type", "name", "range", "present"
      "OutputType", "Food", "Local", TRUE
      "TerrainFlag", "Sea", "Local", TRUE
      "Building", "Harbour", "City", TRUE
    }

[effect_supermarket]
type    = "Output_Per_Tile"
value   = {{ food.supermarketFarmlandBonusPct }}
reqs    =
    { "type", "name", "range"
      "Extra", "Farmland", "Local"
      "Building", "Supermarket", "City"
      "OutputType", "Food", "Local"
    }

; Automatic farmland on city center
[effect_supermarket_center]
type    = "Output_Per_Tile"
value   = {{ food.supermarketFarmlandBonusPct }}
reqs    =
    { "type", "name", "range", "present"
      "CityTile", "Center", "Local", TRUE
      "Extra", "Farmland", "Local", FALSE
      "TerrainAlter", "CanIrrigate", "Local", TRUE
      "Building", "Supermarket", "City", TRUE
      "OutputType", "Food", "Local", TRUE
      "Extra", "Mine", "Local", FALSE
      "Extra", "Oil Well", "Local", FALSE
    }

; Make Irrigation extra do something
[effect_irrigation]
type    = "Irrigation_Pct"
value   = 100
reqs    =
    { "type", "name", "range"
      "Extra", "Irrigation", "Local"
    }

; Simulate presence of irrigation extra in unirrigated city centers
[effect_irrigation_city_center]
type    = "Irrigation_Pct"
value   = 100
reqs    =
    { "type", "name", "range", "present"
      "CityTile", "Center", "Local", TRUE
      "Extra", "Irrigation", "Local", FALSE
      "TerrainAlter", "CanIrrigate", "Local", TRUE
      "Extra", "Mine", "Local", FALSE
      ; Oil Well also prevents irrigation, but requires Mine so not needed here
    }

; Desert with river (and no Oasis) gets 1 extra food from irrigation (total 2)
; ("Nile floods" effect)
[effect_irrigation_desert_river]
type    = "Irrigation_Pct"
value   = {{ food.desertRiverIrrigationBonusPct }}
reqs    =
    { "type", "name", "range", "present"
      "Terrain", "Desert", "Local", TRUE
      "Extra", "River", "Local", TRUE
      "Extra", "Oasis", "Local", FALSE
      "Extra", "Irrigation", "Local", TRUE
    }

; ...same for city centers
[effect_irrigation_city_centre_desert_river]
type    = "Irrigation_Pct"
value   = {{ food.desertRiverIrrigationBonusPct }}
reqs    =
    { "type", "name", "range", "present"
      "Terrain", "Desert", "Local", TRUE
      "Extra", "River", "Local", TRUE
      "Extra", "Oasis", "Local", FALSE
      "CityTile", "Center", "Local", TRUE
      "Extra", "Irrigation", "Local", FALSE
      "TerrainAlter", "CanIrrigate", "Local", TRUE
      "Extra", "Mine", "Local", FALSE
      ; Oil Well also prevents irrigation, but requires Mine so not needed here
    }

