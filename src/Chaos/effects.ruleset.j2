; Modifying this file:
; You should not modify this file except to make bugfixes or
; for other "maintenance".  If you want to make custom changes,
; you should create a new datadir subdirectory and copy this file
; into that directory, and then modify that copy.  Then use the
; command "rulesetdir <mysubdir>" in the server to have freeciv
; use your new customized file.

; Note that the freeciv AI may not cope well with anything more
; than minor changes.

{%- macro build_options() -%}
    {{ varargs | select("ne", "") | join(' ') }}
{%- endmacro %}

[datafile]
description="Longturn Traditional based on Civ2Civ3 effects data for Freeciv"
options="{{ build_options(
    "+Freeciv-ruleset-Devel-2017.Jan.02",
    "+Bombard_Limit_Pct",
    "+Nation_Intelligence",
    "+Vision_Layer"
) }}"
format_version=20

; /* <-- avoid gettext warnings
;
; Effects
;
; type                    = What the effect does. Values of multiple active effects
;                           of the same type get summed for the total.
;                           See README.effects for list of possible types
; value                   = Value added for the effect type when this effect is active,
;                           i.e., all requirements are fulfilled
; multiplier              = Name of the policy that gives a multiplier for effect's value
; reqs                    = Requirements for the effect to be active.
;                           See README.effects for help on requirements
;
; */ <-- avoid gettext warnings

{%- macro build_string_list() -%}
    "{{ varargs | select("ne", "") | join('", "') }}"
{%- endmacro -%}

{%- macro generic_req(req, show_present, show_quiet, show_survives) -%}
    "{{ req.type }}", "{{ req.name }}", "{{ req.range }}"
    {%- if show_present | default(false) -%}
        , {{ req.present | default(true) | tostring | upper }}
    {%- endif -%}
    {%- if show_quiet | default(false) -%}
        , {{ req.quiet | default(false) | tostring | upper }}
    {%- endif -%}
    {%- if show_survives | default(false) -%}
        , {{ req.survives | default(false) | tostring | upper }}
    {%- endif -%}
{%- endmacro -%}

{%- macro requirements(reqs) %}
{%- if reqs is defined -%}
{%- set show_present = effect.reqs | selectattr("present", "defined") | any -%}
{%- set show_quiet = effect.reqs | selectattr("quiet", "defined") | any -%}
{%- set show_survives = effect.reqs | selectattr("survives", "defined") | any -%}
reqs =
    { {{ build_string_list(
        "type", "name", "range",
        "present" if show_present else "",
        "quiet" if show_quiet else "",
        "survives" if show_survives else ""
    ) }}
{%- for req in effect.reqs %}
      {{ generic_req(req, show_present, show_quiet, show_survives) }}
{% endfor %}
    }
{% endif -%}
{%- endmacro -%}

{%- macro generic_effect(effect) %}
[effect_{{ effect.name | slugify }}]
type = "{{ effect.etype }}"
value = {{ effect.value }}
{%- if effect.multiplier is defined %}
multiplier = "{{ effect.multiplier }}
{% endif -%}
{{ requirements(effect.reqs) }}
{% endmacro %}

{# TODO generic effects list #}

*include "Chaos/effects/ai.ruleset"
*include "Chaos/effects/chronology.ruleset"
*include "Chaos/effects/cities.ruleset"
*include "Chaos/effects/culture.ruleset"
*include "Chaos/effects/defence.ruleset"
*include "Chaos/effects/espionage.ruleset"
*include "Chaos/effects/food.ruleset"
*include "Chaos/effects/gold.ruleset"
*include "Chaos/effects/governance.ruleset"
*include "Chaos/effects/growth.ruleset"
*include "Chaos/effects/happiness.ruleset"
*include "Chaos/effects/illness.ruleset"
*include "Chaos/effects/movement.ruleset"
*include "Chaos/effects/nuclear.ruleset"
*include "Chaos/effects/pollution.ruleset"
*include "Chaos/effects/production.ruleset"
*include "Chaos/effects/science.ruleset"
*include "Chaos/effects/space.ruleset"
*include "Chaos/effects/trade.ruleset"
*include "Chaos/effects/unitSupport.ruleset"
*include "Chaos/effects/unitUpgrades.ruleset"
*include "Chaos/effects/veterancy.ruleset"
{% if features.blindWorld.enabled -%}
*include "Chaos/effects/vision-blindWorld.ruleset"
{% else -%}
*include "Chaos/effects/vision.ruleset"
{%- endif %}
