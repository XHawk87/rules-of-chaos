{% set waste = options.cities.trade.waste -%}
; -2% each tile without the corporation or an advanced government
[effect_corruption_distance_ancient]
type    = "Output_Waste_By_Distance"
value   = {{ waste.perHundredTilesPct.ancient }}
reqs    =
    { "type",       "name",            "range",  "present"
      "OutputType", "Trade",           "Local",  TRUE
      "Tech",       "The Corporation", "Player", FALSE
      "Gov",        "Communism",       "Player", FALSE
      "Gov",        "Federation",      "Player", FALSE
    }

; Federation before The Corporation gets -1% trade per tile
[effect_corruption_distance_early_federation]
type    = "Output_Waste_By_Distance"
value   = {{ waste.perHundredTilesPct.earlyFederation }}
reqs    =
    { "type",       "name",            "range",  "present"
      "OutputType", "Trade",           "Local",  TRUE
      "Gov",        "Federation",      "Player", TRUE
      "Tech",       "The Corporation", "Player", FALSE
    }

; The Corporation without advanced governments get -1% trade each tile
[effect_corruption_distance_corporate_simple_gov]
type    = "Output_Waste_By_Distance"
value   = {{ waste.perHundredTilesPct.corporateSimpleGov }}
reqs    =
    { "type",       "name",            "range",  "present"
      "OutputType", "Trade",           "Local",  TRUE
      "Tech",       "The Corporation", "Player", TRUE
      "Gov",        "Communism",       "Player", FALSE
      "Gov",        "Federation",      "Player", FALSE
    }

; The Corporation with federation get -0% trade each tile
[effect_corruption_distance_corporate_federation]
type    = "Output_Waste_By_Distance"
value   = {{ waste.perHundredTilesPct.corporateFederation }}
reqs    =
    { "type",       "name",            "range",  "present"
      "OutputType", "Trade",           "Local",  TRUE
      "Tech",       "The Corporation", "Player", TRUE
      "Gov",        "Federation",      "Player", TRUE
    }

; -0% trade each tile under communism
[effect_corruption_distance_communism]
type    = "Output_Waste_By_Distance"
value   = {{ waste.perHundredTilesPct.communism }}
reqs    =
    { "type",       "name",            "range",  "present"
      "OutputType", "Trade",           "Local",  TRUE
      "Gov",        "Communism",       "Player", TRUE
    }

[effect_corruption_tribal]
type    = "Output_Waste"
value   = {{ waste.basePct.tribal }}
reqs    =
    { "type",       "name",   "range",  "quiet"
      "OutputType", "Trade",  "Local",  FALSE
      "Gov",        "Tribal", "Player", TRUE
    }

[effect_corruption_despotism]
type    = "Output_Waste"
value   = {{ waste.basePct.despotism }}
reqs    =
    { "type",       "name",      "range",  "quiet"
      "OutputType", "Trade",     "Local",  FALSE
      "Gov",        "Despotism", "Player", TRUE
    }
	
[effect_corruption_city_states]
type    = "Output_Waste"
value   = {{ waste.basePct.cityStates }}
reqs    =
    { "type",       "name",        "range",  "quiet"
      "OutputType", "Trade",       "Local",  FALSE
      "Gov",        "City States", "Player", TRUE
    }

[effect_corruption_monarchy]
type    = "Output_Waste"
value   = {{ waste.basePct.monarchy }}
reqs    =
    { "type",       "name",     "range",  "quiet"
      "OutputType", "Trade",    "Local",  FALSE
      "Gov",        "Monarchy", "Player", TRUE
    }

[effect_corruption_communism]
type    = "Output_Waste"
value   = {{ waste.basePct.communism }}
reqs    =
    { "type",       "name",      "range",  "quiet"
      "OutputType", "Trade",     "Local",  FALSE
      "Gov",        "Communism", "Player", TRUE
    }

[effect_corruption_fundamentalism]
type    = "Output_Waste"
value   = {{ waste.basePct.fundamentalism }}
reqs    =
    { "type",       "name",           "range",  "quiet"
      "OutputType", "Trade",          "Local",  FALSE
      "Gov",        "Fundamentalism", "Player", TRUE
    }

; placeholder: No corruption in Federation
[effect_corruption_federation]
type    = "Output_Waste"
value   = {{ waste.basePct.federation }}
reqs    =
    { "type",       "name",       "range",  "quiet"
      "OutputType", "Trade",      "Local",  FALSE
      "Gov",        "Federation", "Player", TRUE
    }

[effect_corruption_republic]
type    = "Output_Waste"
value   = {{ waste.basePct.republic }}
reqs    =
    { "type",       "name",     "range",  "quiet"
      "OutputType", "Trade",    "Local",  FALSE
      "Gov",        "Republic", "Player", TRUE
    }

[effect_corruption_democracy]
type    = "Output_Waste"
value   = {{ waste.basePct.democracy }}
reqs    =
    { "type",       "name",      "range",  "quiet"
      "OutputType", "Trade",     "Local",  FALSE
      "Gov",        "Democracy", "Player", TRUE
    }

[effect_courthouse]
type    = "Output_Waste_Pct"
value   = {{ waste.reductionPct.courthouse }}
reqs    =
    { "type", "name", "range"
      "Building", "Courthouse", "City"
      "OutputType", "Trade", "Local"
    }

[effect_palace]
type    = "Output_Waste_Pct"
value   = {{ waste.reductionPct.palace }}
reqs    =
    { "type", "name", "range"
      "Building", "Palace", "City"
      "OutputType", "Trade", "Local"
    }

[effect_2nd_palace]
type    = "Output_Waste_Pct"
value   = {{ waste.reductionPct.palace }}
reqs    =
    { "type", "name", "range", "present"
      "Building", "Second Palace", "City", TRUE
      "OutputType", "Trade", "Local", TRUE
      "Building", "Palace", "City", FALSE
    }

{% set eop = options.cities.trade.earlyOutputPenalty -%}
{% if eop.enabled -%}
; Railroad because makes Pyramids obsolete
{% for gov in eop.affectedGovernments -%}
[effect_gov_tile_penalty_trade_{{ gov | slugify }}]
type    = "Output_Penalty_Tile"
value   = 2
reqs    =
    { "type", "name", "range", "present", "quiet"
      "OutputType", "Trade", "Local", TRUE, TRUE
      "Gov", "{{ gov }}", "Player", TRUE, TRUE
      {% if eop.eliminatedByPyramids -%}
      "Building", "Pyramids", "Player", FALSE, FALSE
      {% endif -%}
      {% if eop.eliminatedByRailroadTech -%}
      "Tech", "Railroad", "Player", FALSE, FALSE
      {% endif -%}
    }
{% endfor %}
{%- endif %}

{% set everyTileBonus = options.cities.trade.everyTileBonus -%}
[effect_gov_tile_bonus_city_states]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.cityStates }}
reqs    =
    { "type", "name", "range", "present", "quiet"
      "Gov", "City States", "Player", TRUE, TRUE
      "OutputType", "Trade", "Local", TRUE, FALSE
    }

[effect_gov_tile_bonus_republic]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.republicLand }}
reqs    =
    { "type", "name", "range", "present", "quiet"
      "Gov", "Republic", "Player", TRUE, TRUE
      "OutputType", "Trade", "Local", TRUE, FALSE
      "TerrainClass", "Oceanic", "Local", FALSE, FALSE
    }

[effect_gov_tile_bonus_democracy]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.democracyLand }}
reqs    =
    { "type", "name", "range", "present", "quiet"
      "Gov", "Democracy", "Player", TRUE, TRUE
      "OutputType", "Trade", "Local", TRUE, FALSE
      "TerrainClass", "Oceanic", "Local", FALSE, FALSE
    }

; Tiles with farmland don't get Super Highways + road trade bonus
[effect_super_highways]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.superHighways }}
reqs    =
    { "type", "name", "range", "present"
      "Extra", "Road", "Local", TRUE
      "Building", "Super Highways", "City", TRUE
      "OutputType", "Trade", "Local", TRUE
      "Extra", "Farmland", "Local", FALSE
      "CityTile", "Center", "Local", FALSE
    }

; City center tiles do get the Super Highways + road trade bonus, even
; if they are already receiving a (possibly 'automatic') farmland bonus
[effect_super_highways_city_center_1]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.superHighways }}
reqs    =
    { "type", "name", "range", "present"
      "Extra", "Road", "Local", TRUE
      "Building", "Super Highways", "City", TRUE
      "OutputType", "Trade", "Local", TRUE
      "CityTile", "Center", "Local", TRUE
    }

[effect_colossus]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.colossus }}
reqs    =
    { "type", "name", "range"
      "Building", "Colossus", "City"
      "OutputType", "Trade", "Local"
    }

[effect_atlantic_telegraph_company_2]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.atlanticTelegraphCompany }}
reqs    =
    { "type", "name", "range"
      "Building", "Atlantic Telegraph Company", "City"
      "OutputType", "Trade", "Local"
    }

[effect_ruins_trade]
type    = "Output_Inc_Tile"
value   = {{ everyTileBonus.ruins }}
reqs    =
    { "type", "name", "range"
      "Extra", "Ruins", "Local"
      "OutputType", "Trade", "Local"
    }

{% for gov, bonus in everyTileBonus.celebration.items() %}
[effect_gov_tile_bonus_celebrate_{{ gov | slugify }}]
type    = "Output_Inc_Tile_Celebrate"
value   = {{ bonus }}
reqs    =
    { "type", "name", "range", "present", "quiet"
      "OutputType", "Trade", "Local", TRUE, TRUE
      "Gov", "{{ gov }}", "Player", TRUE, FALSE
    }
{% endfor %}

{% set bonusPct = options.cities.trade.outputBonusPct -%}
[effect_marco_polos_embassy]
type    = "Output_Bonus"
value   = {{ bonusPct.marcoPolo }}
reqs    =
    { "type", "name", "range"
      "Building", "Marco Polo's Embassy", "World"
      "OutputType", "Trade", "Local"
    }

[effect_trade_company]
type    = "Output_Bonus"
value   = {{ bonusPct.tradeCompany }}
reqs    =
    { "type", "name", "range"
      "Building", "Trade Company", "Player"
      "OutputType", "Trade", "Local"
    }

{% for size, bonus in bonusPct.fromSize.items() %}
[effect_sizebonus_from{{ size }}]
type    = "Output_Bonus"
value   = {{ bonus }}
reqs    =
    { "type", "name", "range"
      "OutputType", "Trade", "Local"
	  "MinSize", "{{ size }}", "City"
    }
{% endfor %}

